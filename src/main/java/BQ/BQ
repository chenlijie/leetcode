现在再来说一下BQ
你有没有在时限很短的情况下完成一个项目，你是怎么调节你的时间的，你是否因此必须牺牲什么？这个问题问了两次还是三次。。。
30秒钟介绍一下你自己。
你有没有遇到过你和你的teammate有不同的想法，最后发现其实是你的想法错了，你怎么解决的？
你有没有被人指责过，你是怎么做的？
你说你always willing to learn，那你最近有学到什么吗？
你最近有没有学到什么新的可以帮助你的工具？


我再来具体说一下第四轮（bar raiser）。一开始manager介绍了一下自己，然后要我介绍我自己，我说我很pasionate，always willing to learn，刚说完这一句，他就说本公司的员工都有一些特质，其中有14个特质我们非常看重（其实就是leadership principles），其中有一条就是curiosity，我瞎猫碰死耗子了。。。，因为没有提前准备自我介绍。。。然后他开始问我BQ3，我举了一个我在本科的时候遇到的一个问题，我说一开始我们想法不同，我就说要不咱们分析一下利弊，再做决定，最后我说我认识到了自己的错误，就跟和我想法不同的那个人说我的想法是错的，就用你的想法吧。然后是BQ4，我局的例子是我弹吉他录beyond的一首歌，被我朋友批的一文不值。。。他还开玩笑说其实有时候号朋友才会当面指责你，因为关系铁嘛，可见举例子不一定非要是做项目的，但是举专业领域的例子一定是好的。然后是BQ5和BQ6，我说我前不久在准备其他公司的面试，那家公司用的是C，我就去网上找了很多关于C的东西，然后我发现了balabala-google 1point3acres
鏉ユ簮涓€浜�.涓夊垎鍦拌鍧�.
总体感觉下来，交流很重要，很多时候不仅可以让面试官知道你在想什么，也可以帮助你自己想明白应该怎么去做。其次就是BQ的例子一定要准备，最好是真实的，他们问的很细，而且你稍微回头看一下你以往的项目或者作业或者生活中的一些事情，很多都可以作为例子。至于说代码题，我觉得难度也就LeetCode中等难度的，一开始做不出来也不要慌，面试官应该会给你提示，应该。。。对于一些常用的数据结构你也应该要十分了解，比如像HashMap, HashTable,Hashsomething..., priority queue, tree之类的第四轮那个题我能想到用trie其实也是因为我复习了trie，所以数据结构很重要。至于算法嘛。。。也不外呼back tracking,迭代，greedy,dynamic programming这之类的老生常谈的问题。四轮面试里算法题最难的就是我第四轮的题，如果我不知道trie，我一定想不出效率高的解法。